---
interface Props {
    siteTitle: string,
    backgroundUrl: URL
}

const {siteTitle, backgroundUrl} = Astro.props
const coverImageLightUrl = `linear-gradient(rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6)),url(${backgroundUrl.toString()})`;
const coverImageDarkUrl = `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),url(${backgroundUrl.toString()})`;
---

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width"/>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
    <meta name="generator" content={Astro.generator}/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>{siteTitle}</title>
</head>
<body class="solitude-body">
<slot/>
</body>
</html>

<style define:vars={{coverImageLightUrl, coverImageDarkUrl}}>
    html {
        background-size  : cover;
        background-image : var(--coverImageLightUrl);
    }

    .dark {
        background-image : var(--coverImageDarkUrl);
    }
</style>

<script>
    const storedTheme = localStorage.getItem('theme');
    const themeMode = storedTheme ? JSON.parse(storedTheme).state.themeMode : 'dark';
    document.documentElement.classList.add(themeMode)
</script>
